[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog\nmoikka sinne!"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "dynamic filtering\n\n\n\n\n\n\n\n\n\n\n\n\nJuha\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/dynamic-filtering.html",
    "href": "posts/dynamic-filtering.html",
    "title": "dynamic filtering",
    "section": "",
    "text": "Data analytics work requires to use SQL, where the work can be for example comparing different table, for example feature engineering. Alrough SQL is easy to pickup and efficient tool.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nIn this post how to build iterative sql based on purrr and list. I also show how to use dbplyr to query databases with custom made function.\n\ncars |&gt; \n    as_tibble()\n\n# A tibble: 50 × 2\n   speed  dist\n   &lt;dbl&gt; &lt;dbl&gt;\n 1     4     2\n 2     4    10\n 3     7     4\n 4     7    22\n 5     8    16\n 6     9    10\n 7    10    18\n 8    10    26\n 9    10    34\n10    11    17\n# ℹ 40 more rows"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Juha Päällysaho Portfolio",
    "section": "",
    "text": "Non classified topics about analytics\n\n\n\n\n\n\n\n\n  \n\n\n\n\ndynamic filtering\n\n\n\n\n\n\n\n\n\n\n\n\nJuha\n\n\n\n\n\n\nNo matching items"
  }
]